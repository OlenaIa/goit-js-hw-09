{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAoDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,iBAGnBG,EAAO,CAACJ,WAAUC,gB,GAGnBA,E,IA7DSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAgEC,EAAnBF,EAAMG,cAA3CC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAC3BC,EAAW,CACfH,MAAOI,OAAOJ,EAAMK,OACpBJ,KAAMG,OAAOH,EAAKI,OAClBH,OAAQE,OAAOF,EAAOG,QAGxB,GAAIF,EAASH,MAAQ,GAAKG,EAASF,KAAO,GAAKE,EAASD,OAAS,EAC/D,OAAOtB,EAAA0B,OAAOC,QAAQ,gCAAiC,CACrDC,MAAO,QACPzB,SAAU,gBACV0B,SAAU,OACVC,cAAc,IAKlB,IADA,IAAIC,EAAeR,EAASH,MACnBY,EAAW,EAAGA,GAAYT,EAASD,OAAQU,IAClD9B,EAAc8B,EAAUD,GACrBE,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAY8B,EAAZ9B,aACjBJ,EAAA0B,OAAOS,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAmBiC,OAAbhC,EAAa,MAAK,CACrEwB,MAAK,QACPS,QAAS,IACTlC,SAAU,gBACV0B,SAAU,OACVC,cAAc,G,IAGjBQ,OAAM,SAAAJ,G,IAAE/B,EAAQ+B,EAAR/B,SAAUC,EAAY8B,EAAZ9B,aACjBJ,EAAA0B,OAAOC,QAAQ,sBAAqCS,OAAfjC,EAAS,QAAmBiC,OAAbhC,EAAa,MAAK,CACpEwB,MAAO,QACPS,QAAS,IACTlC,SAAU,gBACV0B,SAAU,OACVC,cAAc,G,IAGpBC,GAAgBR,EAASF,KAG3BN,EAAMG,cAAcqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  const { elements: { delay, step, amount} } = event.currentTarget;\n  const dataForm = {\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value)\n  };\n\n  if (dataForm.delay < 0 || dataForm.step < 0 || dataForm.amount < 0) {\n    return Notify.failure('Please, enter positive values', {\n      width: '400px',\n      position: 'center-center',\n      fontSize: '28px',\n      clickToClose: true\n    });\n  };\n\n  let delayPromise = dataForm.delay;\n  for (let position = 1; position <= dataForm.amount; position++) {\n    createPromise(position, delayPromise)\n      .then(({ position, delayPromise }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delayPromise}ms`, {\n          width: '400px',\n          timeout: 4000,\n          position: 'center-center',\n          fontSize: '28px',\n          clickToClose: true\n        });\n      })\n      .catch(({position, delayPromise}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delayPromise}ms`, {\n          width: '400px',\n          timeout: 4000,\n          position: 'center-center',\n          fontSize: '28px',\n          clickToClose: true\n        });\n      });\n    delayPromise += dataForm.step;\n  };   \n\n  event.currentTarget.reset();\n};\n\nfunction createPromise(position, delayPromise) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delayPromise})\n        // Fulfill\n      } else {\n        reject({position, delayPromise})\n        // Reject\n      }\n    }, delayPromise)\n  }); \n};\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delayPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","dataForm","Number","value","Notify","failure","width","fontSize","clickToClose","delayPromise1","position1","then","param","success","concat","timeout","catch","reset"],"version":3,"file":"03-promises.a6ffbe55.js.map"}